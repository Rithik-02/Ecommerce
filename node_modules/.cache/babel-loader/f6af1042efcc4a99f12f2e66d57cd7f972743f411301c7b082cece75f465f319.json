{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartCount: 0,\n    products: [],\n    address: null,\n    subtotal: 0,\n    brandData: [],\n    sizeData: [],\n    filterProduct: []\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const existingItem = state.products.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.products.push({\n          ...action.payload,\n          quantity: 1\n        });\n        state.cartCount += 1;\n        console.log(state.cartCount);\n      }\n    },\n    // removeFromCart: (state, action) => {\n    //   const existingItem = state.products.find(\n    //     (item) => item.id === action.payload.id\n    //   );\n    //   if (existingItem) {\n    //     existingItem.quantity -= 1;\n    //     if (existingItem.quantity === 0) {\n    //       state.products = state.products.filter(\n    //         (item) => item.id !== action.payload.id\n    //       );\n    //     }\n    //     state.cartCount -= 1;\n    //     console.log(state.cartCount);\n    //   }\n    // },\n    removeFromCart: (state, action) => {\n      const existingItem = state.products.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        const updatedProducts = existingItem.quantity > 1 ? state.products.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: item.quantity - 1\n        } : item) : state.products.filter(item => item.id !== action.payload.id);\n        return {\n          ...state,\n          products: updatedProducts,\n          cartCount: state.cartCount - 1\n        };\n      }\n      return state;\n    },\n    selectedAddress: (state, action) => {\n      state.address = action.payload;\n    },\n    addTotal: (state, action) => {\n      state.subtotal = action.payload;\n    },\n    brandFilteredData: (state, action) => {\n      state.brandData = action.payload;\n      console.log(action.payload);\n    },\n    sizeFilteredData: (state, action) => {\n      state.sizeData = action.payload;\n    },\n    allFilteredData: (state, action) => {\n      state.filterProduct = action.payload;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  selectedAddress,\n  addTotal,\n  brandFilteredData,\n  allFilteredData,\n  sizeFilteredData\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cartCount","products","address","subtotal","brandData","sizeData","filterProduct","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","push","console","log","removeFromCart","updatedProducts","map","filter","selectedAddress","addTotal","brandFilteredData","sizeFilteredData","allFilteredData","actions","reducer"],"sources":["C:/Users/rithi/Ecommerce/src/Redux/Slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartCount: 0,\n    products: [],\n    address: null,\n    subtotal: 0,\n    brandData: [],\n    sizeData: [],\n    filterProduct: [],\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const existingItem = state.products.find(\n        (item) => item.id === action.payload.id\n      );\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.products.push({ ...action.payload, quantity: 1 });\n        state.cartCount += 1;\n        console.log(state.cartCount);\n      }\n    },\n    // removeFromCart: (state, action) => {\n    //   const existingItem = state.products.find(\n    //     (item) => item.id === action.payload.id\n    //   );\n    //   if (existingItem) {\n    //     existingItem.quantity -= 1;\n    //     if (existingItem.quantity === 0) {\n    //       state.products = state.products.filter(\n    //         (item) => item.id !== action.payload.id\n    //       );\n    //     }\n    //     state.cartCount -= 1;\n    //     console.log(state.cartCount);\n    //   }\n    // },\n    removeFromCart: (state, action) => {\n      const existingItem = state.products.find(\n        (item) => item.id === action.payload.id\n      );\n      if (existingItem) {\n        const updatedProducts =\n          existingItem.quantity > 1\n            ? state.products.map((item) =>\n                item.id === action.payload.id\n                  ? { ...item, quantity: item.quantity - 1 }\n                  : item\n              )\n            : state.products.filter((item) => item.id !== action.payload.id);\n\n        return {\n          ...state,\n          products: updatedProducts,\n          cartCount: state.cartCount - 1,\n        };\n      }\n      return state;\n    },\n    selectedAddress: (state, action) => {\n      state.address = action.payload;\n    },\n    addTotal: (state, action) => {\n      state.subtotal = action.payload;\n    },\n    brandFilteredData: (state, action) => {\n      state.brandData = action.payload;\n      console.log(action.payload);\n    },\n    sizeFilteredData: (state, action) => {\n      state.sizeData = action.payload;\n    },\n    allFilteredData: (state, action) => {\n      state.filterProduct = action.payload;\n    },\n  },\n});\n\nexport const {\n  addToCart,\n  removeFromCart,\n  selectedAddress,\n  addTotal,\n  brandFilteredData,\n  allFilteredData,\n  sizeFilteredData,\n} = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}