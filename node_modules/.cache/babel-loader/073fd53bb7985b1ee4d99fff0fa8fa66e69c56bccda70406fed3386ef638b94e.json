{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    address: null\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const existingItem = state.products.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n        console.log(\"quantity triggered\");\n      } else {\n        state.products.push({\n          ...action.payload,\n          quantity: 1\n        });\n      }\n    },\n    removeFromCart: (state, action) => {\n      const existingItem = state.products.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        existingItem.quantity -= 1;\n        if (existingItem.quantity === 0) {\n          state.products = state.products.filter(item => item.id !== action.payload.id);\n        }\n      }\n    },\n    selectedAddress: (state, action) => {\n      state.address = action.payload;\n      console.log(state.address);\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  selectedAddress\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","products","address","reducers","addToCart","state","action","existingItem","find","item","id","payload","quantity","console","log","push","removeFromCart","filter","selectedAddress","actions","reducer"],"sources":["C:/Users/rithi/Desktop/cyber/src/Redux/Slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    products: [],\r\n    address: null,\r\n  },\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const existingItem = state.products.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (existingItem) {\r\n        existingItem.quantity += 1;\r\n        console.log(\"quantity triggered\");\r\n      } else {\r\n        state.products.push({ ...action.payload, quantity: 1 });\r\n      }\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const existingItem = state.products.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (existingItem) {\r\n        existingItem.quantity -= 1;\r\n        if (existingItem.quantity === 0) {\r\n          state.products = state.products.filter(\r\n            (item) => item.id !== action.payload.id\r\n          );\r\n        }\r\n      }\r\n    },\r\n    selectedAddress: (state, action) => {\r\n      state.address = action.payload;\r\n      console.log(state.address);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, removeFromCart, selectedAddress } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,YAAY,GAAGF,KAAK,CAACJ,QAAQ,CAACO,IAAI,CACrCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EACvC,CAAC;MACD,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACK,QAAQ,IAAI,CAAC;QAC1BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACnC,CAAC,MAAM;QACLT,KAAK,CAACJ,QAAQ,CAACc,IAAI,CAAC;UAAE,GAAGT,MAAM,CAACK,OAAO;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;MACzD;IACF,CAAC;IACDI,cAAc,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAMC,YAAY,GAAGF,KAAK,CAACJ,QAAQ,CAACO,IAAI,CACrCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EACvC,CAAC;MACD,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACK,QAAQ,IAAI,CAAC;QAC1B,IAAIL,YAAY,CAACK,QAAQ,KAAK,CAAC,EAAE;UAC/BP,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACgB,MAAM,CACnCR,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EACvC,CAAC;QACH;MACF;IACF,CAAC;IACDQ,eAAe,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACK,OAAO;MAC9BE,OAAO,CAACC,GAAG,CAACT,KAAK,CAACH,OAAO,CAAC;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,SAAS;EAAEY,cAAc;EAAEE;AAAgB,CAAC,GAAGpB,SAAS,CAACqB,OAAO;AAC/E,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}